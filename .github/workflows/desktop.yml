name: build

on:
  push:
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '6.0.401' # The .NET SDK version to use

jobs:
  build:

    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 将msbuild添加到路径
      uses: microsoft/setup-msbuild@v1.1   
      with:
        msbuild-architecture: x64
        vs-version: '17.4'

    # 安装 NuGet
    - name: Setup NuGet
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'    

    # 还原 NuGet 包
    - name: NuGet restore
      run: nuget restore

    - name: 安装依赖项
      run: dotnet restore
      
    - name: 为发布构建应用程序
      run: msbuild src\YourProjectFile.csproj -t:rebuild -verbosity:diag -property:Configuration=Release  

    # - name: release.zip
    #   run: 7z a -r "D:/a/GreenOnions/GreenOnions/bin/release/eze/release.zip" "./bin/release/*"
    - name: debug.zip
      run: 7z a -r "bin/debug/net6.0-windows/net6.0-windows.zip" "bin/debug/net6.0-windows/*"
    - name: 自动释放
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "exe"
        prerelease: true
        title: "自动构建版本"
        files: |
          !./*/*/*/*/*/*/*/*.dll
          bin/debug/net6.0-windows/net6.0-windows.zip