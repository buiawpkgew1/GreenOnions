name: build

on:
  push:
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'

jobs:
  build:

    strategy:
      matrix:
        configuration: [Debug]

    runs-on: windows-latest
    env:
      Solution_Name: GreenOnions.sln

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1.3
    
    # - name: new wpf
    #   run: dotnet new wap -o GreenOnions


    - name: 执行单元测试
      run: dotnet test

    # - name: Build
    #   run: dotnet build

    # - name: 为发布构建应用程序1
    #   run: msbuild $env:Solution_Name /t:Restore /p:Configuration=release 

    - name: 恢复应用程序
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
    
    # 解码base 64编码的pfx并保存Signing_Certificate
    # - name: Decode the pfx
    #   run: |
    #     $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
    #     $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath GitHubActionsWorkflow.pfx
    #     [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # 通过构建和打包Windows应用程序打包项目来创建应用程序包
    - name: 创建应用程序包
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=GitHubActionsWorkflow.pfx /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}
        
    # - name: 为发布构建应用程序
    #   run: msbuild src\YourProjectFile.csproj -t:rebuild -verbosity:diag -property:Configuration=$env:Configuration
    #   env:
    #     Configuration: ${{ matrix.configuration }}

    # - name: debug.zip1
    #   run: 7z a -r "bin/debug/net6.0-windows/debug1.zip" "**/obj/Debug/net6.0-windows/*"


    # - name: release.zip
    #   run: 7z a -r "bin/release/net6.0-windows/release.zip" "/bin/release/*"
    
    # - name: debug.zip
    #   run: 7z a -r "bin/debug/net6.0-windows/debug.zip" "bin/debug/net6.0-windows/*"
    - name: 自动释放
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "exe"
        prerelease: true
        title: "自动构建版本"
        files: |
          **/GreenOnions.Help.dll
          bin/debug/net6.0-windows/debug.zip
          bin/debug/net6.0-windows/debug1.zip
          bin/release/*/release.zip
          obj\Debug\net6.0\